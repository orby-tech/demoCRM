{"ast":null,"code":"var _jsxFileName = \"/home/oem/ServiceOfTutorials/frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Start from './Start';\nimport NavBar from './NavBar';\nimport { Route } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './redux/rootReducer';\nimport { connect } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {};\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(thunk, logger)));\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()));\n});\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    component: NavBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst WrappedApp = connect(mapStateToProps)(App);\nexport default WrappedApp;","map":{"version":3,"sources":["/home/oem/ServiceOfTutorials/frontend/src/App.js"],"names":["React","Start","NavBar","Route","BrowserRouter","Provider","applyMiddleware","createStore","composeWithDevTools","rootReducer","connect","thunk","logger","persistedState","localStorage","getItem","JSON","parse","store","subscribe","setItem","stringify","getState","App","mapStateToProps","state","WrappedApp"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,OAAQ,WAAR;AAEA,OAAQC,KAAR,MAAoB,SAApB;AACA,OAAQC,MAAR,MAAqB,UAArB;AAEA,SAAUC,KAAV,QAAuB,kBAAvB;AACA,SAAUC,aAAV,QAA+B,kBAA/B;AAEA,SAAUC,QAAV,QAA0B,aAA1B;AACA,SAAUC,eAAV,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAAUC,mBAAV,QAAqC,0BAArC;AACA,SAAUC,WAAV,QAA6B,qBAA7B;AACA,SAAUC,OAAV,QAAyB,aAAzB;AACA,OAAQC,KAAR,MAAmB,aAAnB;AACA,OAAQC,MAAR,MAAoB,cAApB;AAEA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CADF,GAEE,EAFzB;AAIA,MAAMG,KAAK,GAAGX,WAAW,CAACE,WAAD,EACrBI,cADqB,EAErBL,mBAAmB,CACnBF,eAAe,CAACK,KAAD,EAAQC,MAAR,CADI,CAFE,CAAzB;AAMAM,KAAK,CAACC,SAAN,CAAgB,MAAI;AAClBL,EAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeH,KAAK,CAACI,QAAN,EAAf,CAAnC;AACD,CAFD;;AAIA,SAASC,GAAT,GAAe;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,SAAS,EAAEhB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF,CADF;AAaD;;AAED,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,MAAMC,UAAU,GAAGhB,OAAO,CAACc,eAAD,CAAP,CAAyBD,GAAzB,CAAnB;AAEA,eAAeG,UAAf","sourcesContent":["import  React from 'react';\nimport  './App.css';\n\nimport  Start  from './Start'\nimport  NavBar  from './NavBar'\n\nimport  { Route } from 'react-router-dom';\nimport  { BrowserRouter } from 'react-router-dom';\n\nimport  { Provider } from 'react-redux'\nimport  { applyMiddleware, createStore } from 'redux'\nimport  { composeWithDevTools } from 'redux-devtools-extension'\nimport  { rootReducer } from './redux/rootReducer'\nimport  { connect } from 'react-redux'\nimport  thunk from 'redux-thunk'\nimport  logger from 'redux-logger'\n\nconst persistedState = localStorage.getItem('reduxState') \n                       ? JSON.parse(localStorage.getItem('reduxState'))\n                       : {}\n\nconst store = createStore(rootReducer,\n    persistedState,   \n    composeWithDevTools(\n    applyMiddleware(thunk, logger)))\n\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n});\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n\n        <BrowserRouter>\n          <Route exact component={NavBar}/>\n          <Route path=\"/\" exact component={Start} />\n\n        </BrowserRouter>\n    </Provider>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\nconst WrappedApp = connect(mapStateToProps)(App);\n\nexport default WrappedApp;"]},"metadata":{},"sourceType":"module"}