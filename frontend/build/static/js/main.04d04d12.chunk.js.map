{"version":3,"sources":["BossLeftColumn.js","BossRightColumn.js","Boss.js","ProfileLeftColumn.js","ProfileRightColumn.js","Profile.js","LeaderLeftColumn.js","LeaderRightColumn.js","Leader.js","LoginForm.js","LoginService.js","Start.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["data","name","выполнены","amt","Profile","props","change","bind","state","update","table","event","arr","this","console","log","target","value","setState","className","width","height","margin","top","right","left","bottom","dataKey","stroke","type","Component","createTicketButton","alert","Boss","map","line","to","onChange","LoginForm","user","password","handle_change","e","prevstate","newState","placeholder","aria-label","aria-describedby","Button","variant","onClick","handle_login","React","signLogApp","display_form","form","displayed_form","logged_in","localStorage","getItem","username","Start","exact","component","NavBar","App","path","Leader","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04d04d12.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n\n\n        <div className=\"\">\n          <select  className=\"custom-select \">\n            <option value=\"selected\"> Статистика выполнения</option>\n            <option value=\"selected\"> Выручка отдела NN </option>\n            <option value=\"selected\"> Выручка отдела AA </option>\n            <option value=\"selected\"> Выручка организации </option>\n\n\n          </select>\n          <h3 className=\"profile__hGraphics\"> Статистика выполненых во время заданий </h3>\n          <p className=\"profile__XTitle\"> Колличество заданий </p>\n\n          <LineChart\n            width={810}\n            height={400}\n            data={data}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n          >\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n\n            <Tooltip />\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <Line type=\"monotone\" dataKey=\"выполнены\" stroke=\"#66ff00\" />\n            <Line type=\"monotone\" dataKey=\"не выполнены\" stroke=\"#FF0000\" />\n            <Legend />\n          </LineChart>\n        </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.createTicketButton = this.createTicketButton.bind(this)\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  createTicketButton(){\n  \talert (\"Вы похвалили сотрудника\")\n  }\n  backButton(){\n  \t  \tthis.setState({update: !this.state.update})\n\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n        <div className=\"profile__regularPlans\">\n                <select  className=\"custom-select\">\n                  <option value=\"selected\">Отдел продаж </option>\n                </select>\n                <br />\n                <br />\n\n                <button className=\"btn btn-success\">\n                  Редактировать план продаж отдела\n                </button>\n                <br />\n\n                <div className=\"\">\n                  <h5 className=\"profile__titlePlans\"> План продаж на сегодня: </h5>\n                  <h4 className=\"profile__countPlans\"> 0 / 60000 </h4>\n                </div>            \n                <div className=\"profile__planOfannouncement\">\n                  <h5 className=\"profile__titlePlans\"> План публикаций на сегодня: </h5>\n                  <h4 className=\"profile__countPlans\"> 0 / 60 </h4>\n                </div>\n\n            </div>\n          <div className=\"profile__agenda\">\n              <h2> Повестка дня: </h2>  \n              <button className=\"btn btn-success\"> \n                Добавить Smart Ticket\n              </button>\n              <div className=\"profile__smartTicket\"> \n                  9 + 1\n              </div>\n              <div className=\"profile__smartTicket\"> \n                  Продать очень много\n              </div>              \n          </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\n\nimport  LeftColumn from './BossLeftColumn'\nimport  RightColumn from './BossRightColumn'\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Boss extends Component{\n  constructor(props) {\n    super(props);\n    this.createTicketButton = this.createTicketButton.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n        ]\n\n    };\n  }\n  createTicketButton(){\n  \tthis.setState({update: !this.state.update})\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"profile__container\">\n\t\t\t\t<div>\n\t\t\t\t\t<LeftColumn />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RightColumn />\n\t\t\t\t</div>\n\t\t\t<div className=\"boss__table\">\n\t\t\t\t\t\t<h1 className=\"boss__additionalTasksHeader\"> Дополнительные задания </h1>\n\t\t\t\t\t\t<select  className=\"custom-select leader__selectPersone\">\n\t\t          <option value=\"selected\">Общий список </option>\n\t\t          \n\t\t          <option value=\"selected\">Иванов </option>\n\t\t          <option value=\"selected\">Отдел продаж</option>\n\t\t        </select>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button className=\"leader__uppendAdditionalTask btn btn-success\"> \n\t\t\t\t\t\t\tДобавить задание\n\t\t\t\t\t\t</button>\t\t\t        \n\t\t\t\t\t\t<table className=\"boss__table\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td> Работник </td>\n\t\t\t\t\t\t\t\t<td> Процесс </td>\n\t\t\t\t\t\t\t\t<td> Состояние </td>\n\t\t\t\t\t\t\t\t<td> Срок </td>\n\t\t\t\t\t\t\t\t<td> Время выполнения </td>\n\t\t\t\t\t\t\t\t<td> Редактировать </td>\n\t\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.table.map( line =>\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<td><Link to=\"/profile\"> {line[0]} </Link></td>\n\t\t\t\t\t\t\t\t<td> {line[1]} </td>\n\t\t\t\t\t\t\t\t<td> {line[2]} </td>\n\t\t\t\t\t\t\t\t<td> {line[3]} </td>\n\t\t\t\t\t\t\t\t<td> {line[4]} </td>\n\t\t\t\t\t\t\t\t<td> {line[5]} </td>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t)\n\t}\n}\nexport default Boss;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n        <div className=\"profile__regularPlans\">\n            <div className=\"profile__planOfSales\">\n              <h3 className=\"profile__titlePlans\"> План продаж на сегодня: </h3>\n              <h2 className=\"profile__countPlans\"> 0 / 30000 </h2>\n            </div>            \n            <div className=\"profile__planOfannouncement\">\n              <h3 className=\"profile__titlePlans\"> План публикаций на сегодня: </h3>\n              <h2 className=\"profile__countPlans\"> 0 / 30 </h2>\n            </div>\n        </div>\n        <br/>\n        <br/>\n\n\n        <div className=\"profile__table\">\n            <h1> Дополнительные задания </h1>\n            <table>\n              <tr>\n                <td> Процесс </td>\n                <td> Состояние </td>\n                <td> Срок </td>\n                <td> Время выполнения </td>\n              </tr>\n\n              {\n                this.state.table.map( line =>\n                <>\n                <td> {line[1]} </td>\n                <td>          \n                  <select  className=\"custom-select profile__input\" \n                    onChange={this.change}>\n                    <option value=\"Не видел\"> Не видел </option>\n\n                    <option value=\"Просмотрел\"> Просмотрел </option>\n                    <option value=\"Исполняю\"> Исполняю </option>                \n                    <option value=\"Есть проблема\"> Есть проблема </option>\n                    <option value=\"Сделал\"> Сделал </option>                        \n                                    \n\n                  </select>\n                </td>\n                <td> {line[3]} </td>\n                <td> {line[4]} </td>\n                </>\n                )\n              }\n            </table>\n          </div>\n\n        <h3 className=\"profile__hGraphics\"> Статистика выполненых во время заданий </h3>\n        <p className=\"profile__XTitle\"> Колличество заданий </p>\n\n        <LineChart\n          width={810}\n          height={400}\n          data={data}\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n        >\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n\n          <Tooltip />\n          <CartesianGrid stroke=\"#f5f5f5\" />\n          <Line type=\"monotone\" dataKey=\"выполнены\" stroke=\"#66ff00\" />\n          <Line type=\"monotone\" dataKey=\"не выполнены\" stroke=\"#FF0000\" />\n          <Legend />\n        </LineChart>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.createTicketButton = this.createTicketButton.bind(this)\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  createTicketButton(){\n  \talert (\"Вы похвалили сотрудника\")\n  }\n  backButton(){\n  \t  \tthis.setState({update: !this.state.update})\n\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n            <div className=\"\">\n                <br />\n                <button className=\" btn btn-success\"> \n                  Оформить продажу\n                </button>\n                <button className=\"profile__titleButton btn btn-success\"> \n                  Я создал объявление \n                </button>\n            </div>\n            <div className=\"\">\n              <h2> Повестка дня: </h2>  \n              <div className=\"profile__smartTicket\"> \n                  9 + 1\n              </div>\n              <div className=\"profile__smartTicket\"> \n                  Продать очень много\n              </div>              \n          </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nimport  LeftColumn from './ProfileLeftColumn'\nimport  RightColumn from './ProfileRightColumn'\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.createTicketButton = this.createTicketButton.bind(this)\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  createTicketButton(){\n  \talert (\"Вы похвалили сотрудника\")\n  }\n  backButton(){\n  \t  \tthis.setState({update: !this.state.update})\n\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"profile__container\"> \n\t\t\t\t<div>\n\t\t\t\t\t<LeftColumn />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RightColumn />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n        <div className=\"profile__regularPlans\">\n            <div className=\"profile__planOfSales\">\n              <h3 className=\"profile__titlePlans\"> План продаж на сегодня: </h3>\n              <h2 className=\"profile__countPlans\"> 0 / 60000 </h2>\n            </div>            \n            <div className=\"profile__planOfannouncement\">\n              <h3 className=\"profile__titlePlans\"> План публикаций на сегодня: </h3>\n              <h2 className=\"profile__countPlans\"> 0 / 60 </h2>\n            </div>\n        </div>\n        <br/>\n        <br/>\n        <div className=\"profile__table\">\n            <h1 className=\"leader__additionalTasksHeader\"> Дополнительные задания </h1>\n              <select  className=\"custom-select leader__selectPersone\">\n                <option value=\"selected\">Иванов </option>\n              </select>\n            <br />\n              <button className=\"leader__uppendAdditionalTask btn btn-success\"> \n                Добавить задание\n              </button>             \n            <table>\n              <tr>\n                <td> Процесс </td>\n                <td> Состояние </td>\n                <td> Срок </td>\n                <td> Время выполнения </td>\n              </tr>\n\n              {\n                this.state.table.map( line =>\n                <>\n                <td> {line[1]} </td>\n                <td>          \n                  <select  className=\"custom-select profile__input\" \n                    onChange={this.change}>\n                    <option value=\"Не видел\"> Не видел </option>\n\n                    <option value=\"Просмотрел\"> Просмотрел </option>\n                    <option value=\"Исполняю\"> Исполняю </option>                \n                    <option value=\"Есть проблема\"> Есть проблема </option>\n                    <option value=\"Сделал\"> Сделал </option>                        \n                                    \n\n                  </select>\n                </td>\n                <td> {line[3]} </td>\n                <td> {line[4]} </td>\n                </>\n                )\n              }\n            </table>        \n          </div>\n\n        <br/>\n        <br/>\n        \n        <br/>\n        <br/>\n          <div className=\"leader__lineChartBlock\">\n          <select  className=\"custom-select leader__selectLineChart\">\n            <option value=\"selected\"> Статистика выполнения</option>\n            <option value=\"selected\"> Выручка отдела </option>\n          </select>\n          <h3 className=\"profile__hGraphics\"> Статистика выполненых во время заданий </h3>\n          <p className=\"profile__XTitle\"> Колличество заданий </p>\n\n          <LineChart\n            width={810}\n            height={400}\n            data={data}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n          >\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n\n            <Tooltip />\n            <CartesianGrid stroke=\"#f5f5f5\" />\n            <Line type=\"monotone\" dataKey=\"выполнены\" stroke=\"#66ff00\" />\n            <Line type=\"monotone\" dataKey=\"не выполнены\" stroke=\"#FF0000\" />\n            <Legend />\n          </LineChart>\n        </div>\n\n\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.createTicketButton = this.createTicketButton.bind(this)\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n  createTicketButton(){\n  \talert (\"Вы похвалили сотрудника\")\n  }\n  backButton(){\n  \t  \tthis.setState({update: !this.state.update})\n\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"\"> \n          <div className=\"profile__agenda\">\n              <h2> Повестка дня: </h2>  \n              <button className=\"btn btn-success\"> \n                Добавить Smart Ticket\n              </button>\n              <div className=\"profile__smartTicket\"> \n                  9 + 1\n              </div>\n              <div className=\"profile__smartTicket\"> \n                  Продать очень много\n              </div>              \n          </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React, { Component } from 'react';\nimport {LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, Legend} from 'recharts';\n\n\n\nimport  LeftColumn from './LeaderLeftColumn'\nimport  RightColumn from './LeaderRightColumn'\n\n\nconst data = [\n\t{ name: \"6 мая 2020\", выполнены: 3, \"не выполнены\":2, amt: 500},\n\t{ name: \"7 мая 2020\", выполнены: 7, \"не выполнены\":1, amt: 500},\n\t{ name: \"8 мая 2020\", выполнены: 5, \"не выполнены\":2, amt: 500},\n\t{ name: \"9 мая 2020\", выполнены: 5, \"не выполнены\":3, amt: 500},\n\t{ name: \"10 мая 2020\", выполнены: 2, \"не выполнены\":3, amt: 500},\n\t{ name: \"11 мая 2020\", выполнены: 6, \"не выполнены\":2, amt: 500},\n\t{ name: \"12 мая 2020\", выполнены: 5, \"не выполнены\":1, amt: 500},\n\n]\nclass Profile extends Component{\n  constructor(props) {\n    super(props);\n    this.change = this.change.bind(this)\n    this.state  = {\n        update: false,\n        table: [\n        \t[\"Иванов\", \"Забрать груз со склада\", \"Просмотрел\", \"до вторника\", \"не определено\", \"ред.\"]\n\n        ]\n    };\n  }\n\n  backButton(){\n  \t  \tthis.setState({update: !this.state.update})\n\n  }\n  change(event){\n  \tlet arr = this.state.table\n  \tconsole.log(event.target.value)\n  \tarr[0][2] = event.target.value\n  \tthis.setState({table: arr})\n  \tconsole.log(this.state.table)\n  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"profile__container\"> \n\t\t\t\t<div>\n\t\t\t\t\t<LeftColumn />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<RightColumn />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\nexport default Profile;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  state = {\n    user: '',\n    password: ''\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"login__container\">\n        <h2>Войти в систему</h2>\n       <input \n          type=\"text\" \n          className=\"login__inputForm form-control\" \n          placeholder=\"Ваш логин\" \n          aria-label=\"Username\" \n          aria-describedby=\"basic-addon1\"                \n          name=\"user\"\n          value={this.state.user}\n          onChange={this.handle_change}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"login__inputForm form-control\" \n          placeholder=\"Пароль\" \n          aria-label=\"password\" \n          aria-describedby=\"basic-addon1\"    \n          value={this.state.password}\n          onChange={this.handle_change}\n        />\n        <Button className=\"sign_log_button\" variant='primary' onClick={e => this.props.handle_login(e, this.state)}>\n          Войти\n        </Button>\n        <br/>\n        <Link to=\"/boss\"> временный переход </Link>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  handle_login: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport LoginForm from './LoginForm';\nimport  { Redirect } from 'react-router-dom';\n\nimport './App.css';\n\n\n\nclass signLogApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayed_form: 'login',\n      logged_in: localStorage.getItem('token') ? true : false,\n      username: ''\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  handle_login = (e, data) => {\n          \n  };\n\n  \n\n  display_form = form => {\n    this.setState({\n      displayed_form: form\n    });\n  };\n\n  render() {\n    if (localStorage.getItem('token')){return <Redirect to='/Profile' />}\n\n\n    let form;\n    switch (this.state.displayed_form) {\n      case 'login':\n        form = <LoginForm handle_login={this.handle_login} />;\n        break;\n      default:\n        form = null;\n    }\n\n    return (\n      <>\n        <div className=\"App\">\n          {form}\n        </div>\n      </>\n    );\n  }\n}\nexport default signLogApp;\n","import  { Redirect,  Route  } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport signLogApp from './LoginService';\n\nclass Start extends Component {\n  render() {\n    return (\n    \t<Route exact component={signLogApp} />  \t\n    \t)}\n}\nexport default Start;\n","import React, { Component }  from 'react';\n\nimport { Link } from 'react-router-dom';\n\n\n\n\n\n\nclass NavBar extends Component{\n\n  render() {\n\n\n    return(  \n      <> \n        <Link className=\"sign_log_button\" to='/boss'>\n          Ваш кабинет\n        </Link>        \n        <br/>\n        <Link className=\"sign_log_button\" to=\"/leader\">\n          Кабинет руководителя\n        </Link>        \n                <br/>\n\n        <Link className=\"sign_log_button\" to=\"/manager\">\n          Кабинет менеджера\n        </Link>  \n      </>\n    );\n  }\n}\n\nexport default NavBar;\n\n\n\n","import  React from 'react';\nimport  './App.css';\nimport  Boss  from './Boss'\nimport  Profile  from './Profile'\nimport  Leader  from './Leader'\nimport  Start  from './Start'\nimport  NavBar from './NavBar'\n\nimport  { Route } from 'react-router-dom';\nimport  { BrowserRouter } from 'react-router-dom';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Route exact component={NavBar}/>\n          <Route path=\"/\" exact component={Start} />  \n          <Route path=\"/boss\" exact component={Boss} />   \n          <Route path=\"/manager\" exact component={Profile} />    \n          <Route path=\"/leader\" exact component={Leader} />    \n\n\n        </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}